# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy to Cloud Run

on:
    push:
        branches: ["deploy/cloud-run"]
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    AR_TAG: asia-southeast2-docker.pkg.dev/positive-harbor-411415/i-can-do-it/i-can-do-it
    SERVICE_NAME: i-can-do-it
    REGION: asia-southeast2

jobs:
    build-app:
        name: Build app
        runs-on: ubuntu-latest
        environment: Prod/Cloud Run Demo
        strategy:
            matrix:
                node-version: [16.x]

        steps:
            - uses: actions/checkout@v4

            # TODO add this on cloud run instead
            - name: Make envfile
              uses: SpicyPizza/create-envfile@v2.0
              with:
                  envkey_FIREBASE_SERVICE_ACCOUNT_KEY: ${{secrets.FIREBASE_SERVICE_ACCOUNT_KEY}}
                  envkey_NEXT_PUBLIC_FIREBASE_CLIENT_APPID: ${{vars.FIREBASE_CLIENT_APPID}}
                  envkey_NEXT_PUBLIC_FIREBASE_CLIENT_MESSAGINGSENDERID: ${{vars.FIREBASE_CLIENT_MESSAGINGSENDERID}}
                  envkey_NEXT_PUBLIC_FIREBASE_CLIENT_STORAGEBUCKET: ${{vars.FIREBASE_CLIENT_STORAGEBUCKET}}
                  envkey_NEXT_PUBLIC_FIREBASE_CLIENT_PROJECTID: ${{vars.FIREBASE_CLIENT_PROJECTID}}
                  envkey_NEXT_PUBLIC_FIREBASE_CLIENT_AUTHDOMAIN: ${{vars.FIREBASE_CLIENT_AUTHDOMAIN}}
                  envkey_NEXT_PUBLIC_FIREBASE_CLIENT_APIKEY: ${{vars.FIREBASE_CLIENT_APIKEY}}
                  envkey_NEXT_PUBLIC_EMULATOR_FIRESTORE_PORT: ${{vars.EMULATOR_FIRESTORE_PORT}}
                  envkey_NEXT_PUBLIC_EMULATOR_AUTH_PORT: ${{vars.EMULATOR_AUTH_PORT}}
                  envkey_NEXT_PUBLIC_EMULATOR_STORAGE_PORT: ${{vars.EMULATOR_STORAGE_PORT}}
                  fail_on_empty: false

            - name: Check envfile
              run: cat .env

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push Docker image to GitHub Packages
              uses: docker/build-push-action@v5
              id: docker_build
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  target: prod

            # - name: Use Node.js ${{ matrix.node-version }}
            #   uses: actions/setup-node@v3
            #   with:
            #       node-version: ${{ matrix.node-version }}
            #       cache: "npm"
            # - run: |
            #       npm ci
            #       npm run build --if-present
            # - name: Upload app
            #   uses: actions/upload-artifact@v4
            #   with:
            #       # Artifact name
            #       name: app
            #       # A file, directory or wildcard pattern that describes what to upload
            #       path: ./.next

    deploy-cloud-run:
        name: Deploy to Cloud Run
        runs-on: ubuntu-latest
        environment:
            name: Prod/Cloud Run Demo
            url: ${{steps.deploy-cloudrun.outputs.url}}
        needs: build-app

        permissions:
            contents: "read"
            id-token: "write"

        steps:
            - uses: actions/checkout@v4

            - name: Authenticate with Google Cloud
              uses: "google-github-actions/auth@v2"
              with:
                  project_id: "positive-harbor-411415"
                  workload_identity_provider: "projects/780572399149/locations/global/workloadIdentityPools/pool-github-actions/providers/github"
                  service_account: "github-actions-deploy-cloud-ru@positive-harbor-411415.iam.gserviceaccount.com"

            - name: Auth Docker
              run: gcloud auth configure-docker asia-southeast2-docker.pkg.dev

            - name: Pull image
              run: docker pull ghcr.io/reyhanardiya/i-can-do-it:deploy-cloud-run

            - name: Retag image
              run: docker tag ghcr.io/reyhanardiya/i-can-do-it:deploy-cloud-run ${{ env.AR_TAG }}

            - name: Push image
              run: docker push asia-southeast2-docker.pkg.dev/positive-harbor-411415/i-can-do-it/i-can-do-it

            - name: Deploy to Cloud Run
              uses: "google-github-actions/deploy-cloudrun@v2"
              id: deploy-cloudrun
              with:
                  image: ${{ env.AR_TAG }}
                  service: ${{ env.SERVICE_NAME }}
                  region: ${{ env.REGION }}

            - name: Set revision to public
              run: gcloud run services add-iam-policy-binding ${{ env.SERVICE_NAME }} --member=allUsers --role=roles/run.invoker --region=${{env.REGION}}
